import{a as g,b as d,c as a,d as l,e as m}from"./chunk-K5ZT4YFK.js";import{Ea as i,Wc as u,e as h,ea as c,ka as p}from"./chunk-FY6FPK4F.js";var b=class r{baseUrl=a.apiUrl;hubsUrl=a.hubsUrl;messagesUrl=`${this.baseUrl}/messages`;hubUrl=`${this.hubsUrl}/message`;hubConnection;paginatedResponse=i(null);messageThread=i([]);http=p(u);createHubConnection(e,s){this.hubConnection=new d().withUrl(`${this.hubUrl}?user=${s}`,{accessTokenFactory:()=>e.token}).withAutomaticReconnect().build(),this.hubConnection.start().catch(n=>console.log(n)),this.hubConnection.on("ReceiveMessageThread",n=>{this.messageThread.set(n)}),this.hubConnection.on("NewMessage",n=>{this.messageThread.update(t=>[...t,n])}),this.hubConnection.on("UpdatedGroup",n=>{n.connections.some(t=>t.username===s)&&this.messageThread.update(t=>(t.forEach(o=>{o.dateRead||(o.dateRead=new Date(Date.now()))}),[...t]))})}stopHubConnection(){this.hubConnection?.state===g.Connected&&this.hubConnection.stop().catch(e=>console.log(e))}getMessages(e,s,n){let t=l(s,n);return t=t.append("container",e),this.http.get(`${this.messagesUrl}`,{observe:"response",params:t}).subscribe({next:o=>{o&&m(o,this.paginatedResponse)}})}getMessageThread(e){return this.http.get(`${this.messagesUrl}/thread/${e}`)}sendMessage(e,s){return h(this,null,function*(){return this.hubConnection?.invoke("SendMessage",{recipientUsername:e,content:s})})}deleteMessage(e){return this.http.delete(`${this.messagesUrl}/${e}`)}static \u0275fac=function(s){return new(s||r)};static \u0275prov=c({token:r,factory:r.\u0275fac,providedIn:"root"})};export{b as a};
